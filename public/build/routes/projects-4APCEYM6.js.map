{
  "version": 3,
  "sources": ["../../../app/routes/projects.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\projects.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\projects.tsx\");\n  import.meta.hot.lastModified = \"1717235557382.5198\";\n}\n// REMIX HMR END\n\nimport React, { useLoaderData } from '@remix-run/react';\nexport const loader = async () => {\n  // Remplacez par votre logique de chargement des donn\u00E9es\n  // Exemple :\n  // const response = await fetch('/api/projects');\n  // const projects = await response.json();\n  // return projects;\n\n  return []; // Temporaire, remplacez par vos donn\u00E9es r\u00E9elles\n};\nconst Projects = () => {\n  _s();\n  const projects = useLoaderData();\n  return <div>\r\n      <h2>Projects</h2>\r\n      <ul>\r\n        {projects.map(project => <li key={project.id}>{project.name}</li>)}\r\n      </ul>\r\n    </div>;\n};\n_s(Projects, \"pNHO6jlNbuLxDJQHzm/1qRQE/nw=\", false, function () {\n  return [useLoaderData];\n});\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;AAmCM;AAlCN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAaA,IAAM,WAAW,MAAM;AACrB,KAAG;AACH,QAAM,WAAW,cAAc;AAC/B,SAAO,mDAAC,SACJ;AAAA,uDAAC,QAAG,wBAAJ;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,IACZ,mDAAC,QACE,mBAAS,IAAI,aAAW,mDAAC,QAAqB,kBAAQ,QAArB,QAAQ,IAAjB;AAAA;AAAA;AAAA;AAAA,WAAmC,CAAK,KADnE;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJG;AAAA;AAAA;AAAA;AAAA,SAKL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAO,mBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
