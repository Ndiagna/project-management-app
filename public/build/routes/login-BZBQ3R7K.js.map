{
  "version": 3,
  "sources": ["../../../app/routes/login.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/login.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/login.tsx\");\n}\n// REMIX HMR END\n\nimport React from '@remix-run/react';\nimport { json, redirect } from '@remix-run/node';\nimport { useState } from \"react\";\nimport stylesUrl from 'app/styles/login.css';\nexport const links = () => {\n  return [{\n    rel: \"stylesheet\",\n    href: stylesUrl\n  }];\n};\nexport const action = async ({\n  request\n}) => {\n  const formData = await request.formData();\n  const email = formData.get('email');\n  const password = formData.get('password');\n  const response = await fetch('http://localhost:5000/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    return redirect('/dashboard');\n  }\n  const result = await response.json();\n  return json({\n    error: result.message\n  }, {\n    status: response.status\n  });\n};\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  return <div className=\"container\">\n      <form method=\"post\" className=\"loginForm\">\n        <h2 className=\"title\">Login</h2>\n        <input type=\"email\" name=\"email\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"Email\" className=\"input\" />\n\n        <input type=\"password\" name=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" className=\"input\" />\n\n        <button type=\"submit\" className=\"button\">Login</button>\n      </form>\n    </div>;\n};\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAC/B,mBAAyB;;;;;;AAwCjB;AA7DR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,2BAA6B,EAAE;AAAA,EACxE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAsB;AACxB;AAOO,IAAM,QAAQ,MAAM;AACzB,SAAO,CAAC;AAAA,IACN,KAAK;AAAA,IACL,MAAM;AAAA,EACR,CAAC;AACH;AA2BA,IAAM,QAAQ,MAAM;AAClB,KAAG;AACH,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAS,EAAE;AACrC,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS,EAAE;AAC3C,SAAO,mDAAC,SAAI,WAAU,aAClB,6DAAC,UAAK,QAAO,QAAO,WAAU,aAC5B;AAAA,uDAAC,QAAG,WAAU,SAAQ,qBAAtB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,mDAAC,WAAM,MAAK,SAAQ,MAAK,SAAQ,OAAO,OAAO,UAAU,OAAK,SAAS,EAAE,OAAO,KAAK,GAAG,aAAY,SAAQ,WAAU,WAAtH;AAAA;AAAA;AAAA;AAAA,WAA8H;AAAA,IAE9H,mDAAC,WAAM,MAAK,YAAW,MAAK,YAAW,OAAO,UAAU,UAAU,OAAK,YAAY,EAAE,OAAO,KAAK,GAAG,aAAY,YAAW,WAAU,WAArI;AAAA;AAAA;AAAA;AAAA,WAA6I;AAAA,IAE7I,mDAAC,YAAO,MAAK,UAAS,WAAU,UAAS,qBAAzC;AAAA;AAAA;AAAA;AAAA,WAA8C;AAAA,OANhD;AAAA;AAAA;AAAA;AAAA,SAOA,KARG;AAAA;AAAA;AAAA;AAAA,SASL;AACJ;AACA,GAAG,OAAO,8BAA8B;AACxC,KAAK;AACL,IAAOA,iBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["login_default"]
}
